{"version":3,"sources":["components/Themes.js","components/Header.js","components/FilterCountry.js","components/FilterRegion.js","components/Country.js","components/Countries.js","components/CountryDetails.js","components/CountryDetail.js","App.js","index.js"],"names":["lightTheme","body","fontColor","element","shadow","card","darkTheme","GlobalStyles","createGlobalStyle","props","theme","StyledApp","styled","div","Header","useState","setTheme","toggleButton","setToggleButton","className","onClick","FilterCountry","name","type","placeholder","onChange","FilterRegion","value","Country","style","textDecoration","color","to","src","flag","alt","population","region","capital","Countries","countries","setCountries","searchCountry","setSearchCountry","setRegion","loading","setLoading","useEffect","fetchRegions","a","axios","get","res","data","fetchCountries","filteredCountries","filter","country","e","target","toLowerCase","includes","toLocaleLowerCase","pupulation","map","index","CountryDetails","nativeName","languages","topLevelDomain","currencies","borders","CountryDetail","match","setCountry","history","useHistory","handleOnClick","useCallback","push","params","id","curr","code","lang","slice","bord","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9e8561b.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const lightTheme = {\r\n    body: 'hsl(0, 0%, 98%)',\r\n    fontColor: \"#000\",\r\n    element: \"hsl(0, 0%, 100%)\",\r\n    shadow: \"0px 0px 5px 0px rgba(100, 100, 100, 0.25)\",\r\n    card: \"hsl(0, 0%, 100%)\"\r\n};  \r\n\r\nexport const darkTheme = {\r\n    body: 'hsl(207, 26%, 17%)',\r\n    fontColor: \"hsl(0, 0%, 100%)\",\r\n    element: \"hsl(209, 23%, 22%)\",\r\n    shadow: \"0px 0px 5px 0px rgba(0, 0, 0, 0.25)\",\r\n    card: \"hsl(209, 23%, 22%)\"\r\n}  \r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n    body {\r\n        background-color: ${(props) => props.theme.body};\r\n    };\r\n\r\n    .header-ul {\r\n        background-color: ${(props) => props.theme.element};\r\n        box-shadow: ${(props) => props.theme.shadow};\r\n    };\r\n\r\n    .country-card {\r\n        background-color: ${(props) => props.theme.card};\r\n        box-shadow: ${(props) => props.theme.shadow};\r\n    }\r\n    \r\n    input {\r\n        background-color: ${(props) => props.theme.element};\r\n        box-shadow: ${(props) => props.theme.shadow};\r\n    };\r\n\r\n    select, .back-btn, .border-li-style {\r\n        background-color: ${(props) => props.theme.element};\r\n        box-shadow: ${(props) => props.theme.shadow};\r\n        color: ${(props) => props.theme.fontColor};\r\n    };\r\n\r\n    .nav-btn, label, option, h2, h6, p {\r\n        color: ${(props) => props.theme.fontColor};\r\n    }\r\n\r\n    ::placeholder {\r\n        color: ${(props) => props.theme.fontColor};\r\n    }\r\n\r\n`;","import React, {useState} from 'react';\r\nimport { HiOutlineMoon } from 'react-icons/hi';\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport {lightTheme, darkTheme, GlobalStyles} from './Themes';\r\n\r\nconst StyledApp = styled.div`\r\n  color: ${(props) => props.theme.fontColor};\r\n`;\r\n\r\nconst Header = () => {\r\n    const [theme, setTheme] = useState(\"light\");\r\n    const [toggleButton, setToggleButton] = useState('Dark Mode')\r\n\r\n    const themeToggler = () => {\r\n        theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\r\n      };\r\n\r\n    const handleButton = () => {\r\n        toggleButton === 'Dark Mode' ? setToggleButton(\"Light Mode\") : setToggleButton(\"Dark Mode\");\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\r\n            <GlobalStyles />\r\n            <StyledApp>\r\n        <div className=\"header\">\r\n            <ul className=\"header-ul\" >\r\n                <li className=\"header-li\"><h3>Where in the world?</h3></li>\r\n                <li className=\"header-li\"><button onClick={() => {themeToggler(); handleButton()}} className=\"nav-btn\"><HiOutlineMoon/> {toggleButton}</button></li>\r\n            </ul>\r\n        </div>\r\n        </StyledApp>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\n\r\nconst FilterCountry = (props) => {\r\n    return (\r\n        <div className=\"input-wrapper\">\r\n            <input \r\n                name=\"name\" \r\n                type=\"text\" \r\n                placeholder=\"Search for a country..\" \r\n                onChange={props.onChange} \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterCountry;\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst FilterRegion = (props) => {\r\n\r\n    return (\r\n        <div className=\"option-wrapper\">\r\n            <label className=\"region-filter\">Filter by Region</label>\r\n            <select value={props.value} onChange={props.onChange}>\r\n                <option value=\"all\">All</option>\r\n                <option value=\"africa\">Africa</option>\r\n                <option value=\"americas\">America</option>\r\n                <option value=\"asia\">Asia</option>\r\n                <option value=\"europe\">Europe</option>\r\n                <option value=\"oceania\">Oceania</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterRegion\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Country = (props) => {\r\n    return (\r\n\r\n        <div className=\"country-card\">\r\n                    <Link style={{ textDecoration: 'none', color: 'black' }} to={`/${props.name}`}>\r\n            <div className=\"country-card-wrapper\">\r\n                <div className=\"country-card-img-wrapper\">\r\n                    <img src={props.flag} alt={props.name} />\r\n                </div>\r\n                <div className=\"country-card-text-wrapper\">\r\n                    <h2>{props.name}</h2>\r\n                    <div><h6>Population: </h6><p>{props.population}</p></div>\r\n                    <div><h6>Region: </h6><p>{props.region}</p></div>\r\n                    <div><h6>Capital: </h6><p>{props.capital}</p></div>\r\n                </div>   \r\n            </div>\r\n            </Link>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Country\r\n","import React, {useState, useEffect} from 'react';\r\nimport FilterCountry from './FilterCountry';\r\nimport FilterRegion from './FilterRegion';\r\nimport Country from './Country';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nconst Countries = () => {\r\n    const [countries, setCountries] = useState([]);\r\n    const [searchCountry, setSearchCountry] = useState('');\r\n    const [region, setRegion] = useState('all');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchRegions = async () => {\r\n            setLoading(true);\r\n            const res = await axios.get(`https://restcountries.eu/rest/v2/region/${region}`);\r\n            setCountries(res.data);\r\n            setLoading(false)\r\n        }\r\n\r\n\r\n        if(region === 'all') {\r\n            const fetchCountries = async () => {\r\n                setLoading(true);\r\n                const res = await axios.get('https://restcountries.eu/rest/v2/all');\r\n                setCountries(res.data);\r\n                setLoading(false)\r\n            }\r\n\r\n/*                 .then(res => {\r\n                    console.log(res)\r\n                    setCountries(res.data)\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                }) */\r\n            \r\n            fetchCountries();\r\n/*         axios.get('https://restcountries.eu/rest/v2/all')\r\n        .then(res => {\r\n            console.log(res)\r\n            setCountries(res.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })} else if(region !== 'all') {\r\n            axios.get(`https://restcountries.eu/rest/v2/region/${region}`)\r\n            .then(res => {\r\n                console.log(res)\r\n                setCountries(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            }) */} else if(region !== 'all') {\r\n                fetchRegions()\r\n            }\r\n    }, [region])\r\n\r\n\r\n    const filteredCountries = countries.filter((country)=> country.population > 1000000)\r\n\r\n\r\n    if (loading) {\r\n        return <h2>Loading...</h2>\r\n    }\r\n    return (\r\n        <div>\r\n            <FilterCountry onChange={e=> setSearchCountry(e.target.value)}/>\r\n            <FilterRegion value={region} onChange={e=> setRegion(e.target.value)} />\r\n            <div>\r\n                \r\n            </div>\r\n            {filteredCountries.filter((country) => {\r\n                if (searchCountry === \"\") {\r\n                    return country;\r\n                } else if(country.name.toLowerCase().includes(searchCountry.toLocaleLowerCase())) {\r\n                    return country;\r\n                } else\r\n                return country.pupulation > 1000;\r\n            }).map((country, index) => (\r\n                <div className=\"countries-bg\" key={index}>\r\n                        <Country name={country.name} flag={country.flag} population={country.population} region={country.region} capital={country.capital}/>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Countries\r\n","import React from 'react'\r\n\r\nconst CountryDetails = (props) => {\r\n    return (\r\n        <div className=\"country-detail-card\">\r\n            <div className=\"country-detail-card-img-wrapper\">\r\n                <img src={props.flag} alt={props.name} /> \r\n            </div>\r\n            <div className=\"country-detail-card-text-wrapper\">\r\n                <h2>{props.name}</h2>\r\n                <div>\r\n                    <h6>Native Name:</h6> <p>{props.nativeName}</p>\r\n                </div>\r\n                <div>\r\n                    <h6>Population: </h6> <p>{props.population}</p>\r\n                </div>\r\n                <div>\r\n                    <h6>Region: </h6> <p>{props.region}</p>\r\n                </div>\r\n                <div><h6>Capital: </h6> <p>{props.capital}</p></div>\r\n                <div className=\"country-detail-bottom\">\r\n                <div><h6>Languages: </h6> {props.languages}</div>\r\n                    <div><h6>Top Level Domain: </h6> <p>{props.topLevelDomain}</p></div>\r\n                    <div><h6>Currencies: </h6> {props.currencies}</div>\r\n                </div>\r\n                <div className=\"border-countries-wrapper\"><h6 className=\"border-countries-font\">Border Countries: </h6> <ul className=\"border-ul-style\">{props.borders}</ul></div>\r\n{/*                 <div><h6>Languages: </h6> <p>{props.languages}</p></div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryDetails","import React, {useState, useEffect, useCallback} from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport CountryDetails from './CountryDetails';\r\nimport { BsArrowLeft } from 'react-icons/bs';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nconst CountryDetail = ({ match }) => {\r\n    const [country, setCountry] = useState([]);\r\n\r\n    const history = useHistory();\r\n    const handleOnClick = useCallback(() => history.push('/rest-countries-api-with-color-theme-switcher/'), [history]);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchCountries = async () => {\r\n            const res = await axios.get(`https://restcountries.eu/rest/v2/name/${match.params.id}?fullText=true`);\r\n            setCountry(res.data);\r\n        }\r\n        fetchCountries()\r\n    }, [match.params.id])\r\n\r\n\r\n\r\n    return (\r\n        <div> \r\n                <button onClick={handleOnClick} className=\"back-btn\"><BsArrowLeft /> Back</button>\r\n            {country.map((country, index) => (\r\n                <div className=\"detail-card\" key={index}>\r\n                    <CountryDetails \r\n                        name={country.name}\r\n                        nativeName={country.nativeName} \r\n                        flag={country.flag} \r\n                        population={country.population} \r\n                        region={country.region} \r\n                        capital={country.capital} \r\n                        topLevelDomain={country.topLevelDomain} \r\n                        currencies={country.currencies.map((curr,index)=>(\r\n                            <p key={index}>{curr.code}</p>\r\n                        ))} \r\n\r\n                        languages={country.languages.map((lang,index)=>(\r\n                            <p key={index}>{lang.name}</p>\r\n                        ))}\r\n\r\n                        borders={country.borders.slice(0, 3).map((bord, index)=>(\r\n                                <li key={index} className=\"border-li-style\">{bord}</li>\r\n                        ))}\r\n                    />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryDetail\r\n","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Header from './components/Header';\nimport Countries from './components/Countries';\nimport CountryDetail from './components/CountryDetail';\n\n\nconst App = () => {\n\n\n  return (\n    <Router>\n      <div>\n      <Header />\n        <Switch>\n          <Route path='/rest-countries-api-with-color-theme-switcher/' exact component={Countries} />\n          <Route path='/rest-countries-api-with-color-theme-switcher/:id' exact component={CountryDetail}/>\n        </Switch>\n    </div>\n    </Router>\n\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}